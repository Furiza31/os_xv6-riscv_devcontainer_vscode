@startuml Multiplicité_des_enfants

title Multiplicité des enfants (Test 1) - Processus père avec N enfants

actor "Terminal" as User
participant "Processus Père\n(main)" as Parent
participant "Enfant 0" as C0
participant "Enfant 1" as C1
participant "..." as CDots
participant "Enfant N-1" as CN

User -> Parent: ./phierarchy N M
note right of Parent: Création des enfants dans une boucle

Parent -> C0: fork()
C0 -> C0: exec(pstree)
C0 -> Parent: termine

Parent -> C1: fork()
C1 -> C1: exec(pstree)
C1 -> Parent: termine

Parent -> CDots: fork() ...
Parent -> CN: fork()
CN -> CN: exec(pstree)
CN -> Parent: termine

note right of Parent
  À la fin de la boucle,
  tous les enfants sont terminés.
end note

Parent -> Parent: exec(ps) pour visualiser
@enduml


@startuml Généalogie_processus

title Généalogie des processus (Test 2) - 5 Générations

participant "Gen 0\n(Main)" as G0
participant "Gen 1\n(Fils de G0)" as G1
participant "Gen 2\n(Fils de G1)" as G2
participant "Gen 3\n(Fils de G2)" as G3
participant "Gen 4\n(Fils de G3)" as G4
participant "pstree" as PST

G0 -> G1: fork()
G1 -> G2: fork()
G2 -> G3: fork()
G3 -> G4: fork()

note over G4: Dernière génération

G4 -> PST: exec(pstree)
PST -> G4: fin

G4 -> G3: termine
G3 -> G2: termine
G2 -> G1: termine
G1 -> G0: termine

note right of G0
  Chaque processus ne crée qu’un seul fils.
  La hiérarchie est linéaire.
  La terminaison est en ordre inverse.
end note

@enduml
